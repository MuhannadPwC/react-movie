{"ast":null,"code":"var _jsxFileName = \"/Users/muhannadalomari/Desktop/2023 Interns Batch/react-project/react-movie-app/src/pages/movies/MoviesList.js\";\nimport { Link, useLoaderData } from \"react-router-dom\";\nimport FilterSearch from \"../../components/FilterSearch\";\nimport MoviePanel from \"../../components/MoviePanel\";\nimport { url } from \"../../Global\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MoviesList = () => {\n  // const movies = useLoaderData().results;\n  const error = movies.length === 0 ? \"No Movies were found, try searching again\" : null;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(FilterSearch, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movies-page\",\n      children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 19\n      }, this), movies && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-grid\",\n        children: movies && movies.map(movie => /*#__PURE__*/_jsxDEV(MoviePanel, {\n          movie: movie\n        }, movie.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this), !error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagenum-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"prev-btn\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Prev\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"page-number\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/search\",\n            children: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"next-btn\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c = MoviesList;\nexport default MoviesList;\n\n/* export const moviesListLoader = async ({ request }) => {\n  const reqUrl = new URL(request.url);\n  const searchTerm = reqUrl.searchParams.get(\"search\");\n  if (searchTerm) {\n    const response = await fetch(`\n    ${url}/search/movie?api_key=0557b758465b10519557edb25fc53d86&language=en-US&query=${searchTerm}`);\n    return response.json();\n  } else {\n    const response = await fetch(`\n    ${url}/search/movie?api_key=0557b758465b10519557edb25fc53d86&language=en-US&query=`);\n    return response.json();\n  }\n}; */\nvar _c;\n$RefreshReg$(_c, \"MoviesList\");","map":{"version":3,"names":["Link","useLoaderData","FilterSearch","MoviePanel","url","jsxDEV","_jsxDEV","Fragment","_Fragment","MoviesList","error","movies","length","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","movie","id","to","_c","$RefreshReg$"],"sources":["/Users/muhannadalomari/Desktop/2023 Interns Batch/react-project/react-movie-app/src/pages/movies/MoviesList.js"],"sourcesContent":["import { Link, useLoaderData } from \"react-router-dom\";\nimport FilterSearch from \"../../components/FilterSearch\";\nimport MoviePanel from \"../../components/MoviePanel\";\nimport { url } from \"../../Global\";\n\nconst MoviesList = () => {\n  // const movies = useLoaderData().results;\n  const error =\n    movies.length === 0 ? \"No Movies were found, try searching again\" : null;\n\n  return (\n    <>\n      <FilterSearch />\n      <div className=\"movies-page\">\n        {error && <div className=\"movie-error\">{error}</div>}\n        {movies && (\n          <div className=\"movie-grid\">\n            {movies &&\n              movies.map((movie) => (\n                <MoviePanel movie={movie} key={movie.id} />\n              ))}\n          </div>\n        )}\n        {!error && (\n          <div className=\"pagenum-container\">\n            <div className=\"prev-btn\">\n              <button>Prev</button>\n            </div>\n            <div className=\"page-number\">\n              <Link to=\"/search\">1</Link>\n            </div>\n            <div className=\"next-btn\">\n              <button>Next</button>\n            </div>\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default MoviesList;\n\n/* export const moviesListLoader = async ({ request }) => {\n  const reqUrl = new URL(request.url);\n  const searchTerm = reqUrl.searchParams.get(\"search\");\n  if (searchTerm) {\n    const response = await fetch(`\n    ${url}/search/movie?api_key=0557b758465b10519557edb25fc53d86&language=en-US&query=${searchTerm}`);\n    return response.json();\n  } else {\n    const response = await fetch(`\n    ${url}/search/movie?api_key=0557b758465b10519557edb25fc53d86&language=en-US&query=`);\n    return response.json();\n  }\n}; */\n"],"mappings":";AAAA,SAASA,IAAI,EAAEC,aAAa,QAAQ,kBAAkB;AACtD,OAAOC,YAAY,MAAM,+BAA+B;AACxD,OAAOC,UAAU,MAAM,6BAA6B;AACpD,SAASC,GAAG,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEnC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EACvB;EACA,MAAMC,KAAK,GACTC,MAAM,CAACC,MAAM,KAAK,CAAC,GAAG,2CAA2C,GAAG,IAAI;EAE1E,oBACEN,OAAA,CAAAE,SAAA;IAAAK,QAAA,gBACEP,OAAA,CAACJ,YAAY;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAChBX,OAAA;MAAKY,SAAS,EAAC,aAAa;MAAAL,QAAA,GACzBH,KAAK,iBAAIJ,OAAA;QAAKY,SAAS,EAAC,aAAa;QAAAL,QAAA,EAAEH;MAAK;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAO,EACnDN,MAAM,iBACLL,OAAA;QAAKY,SAAS,EAAC,YAAY;QAAAL,QAAA,EACxBF,MAAM,IACLA,MAAM,CAACQ,GAAG,CAAEC,KAAK,iBACfd,OAAA,CAACH,UAAU;UAACiB,KAAK,EAAEA;QAAM,GAAMA,KAAK,CAACC,EAAE;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACxC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAEP,EACA,CAACP,KAAK,iBACLJ,OAAA;QAAKY,SAAS,EAAC,mBAAmB;QAAAL,QAAA,gBAChCP,OAAA;UAAKY,SAAS,EAAC,UAAU;UAAAL,QAAA,eACvBP,OAAA;YAAAO,QAAA,EAAQ;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAS;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACjB,eACNX,OAAA;UAAKY,SAAS,EAAC,aAAa;UAAAL,QAAA,eAC1BP,OAAA,CAACN,IAAI;YAACsB,EAAE,EAAC,SAAS;YAAAT,QAAA,EAAC;UAAC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAO;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACvB,eACNX,OAAA;UAAKY,SAAS,EAAC,UAAU;UAAAL,QAAA,eACvBP,OAAA;YAAAO,QAAA,EAAQ;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAS;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACjB;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAET;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACG;EAAA,gBACL;AAEP,CAAC;AAACM,EAAA,GAlCId,UAAU;AAoChB,eAAeA,UAAU;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}