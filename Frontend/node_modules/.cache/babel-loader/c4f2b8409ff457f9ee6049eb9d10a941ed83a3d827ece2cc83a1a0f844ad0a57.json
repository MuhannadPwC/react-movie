{"ast":null,"code":"var _jsxFileName = \"/Users/muhannadalomari/Desktop/2023 Interns Batch/react-project/react-movie-app/src/pages/movies/MoviesList.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { Link, useActionData, useLoaderData, useSearchParams } from \"react-router-dom\";\nimport MoviePanel from \"../../components/MoviePanel\";\nimport SearchForm from \"../../components/SearchForm\";\nimport SearchFetch from \"../../Fetch/SearchFetch\";\nimport { url } from \"../../Global\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MoviesList = () => {\n  _s();\n  // const movies = useLoaderData().results;\n  // const error =\n  //   movies.length === 0 ? \"No Movies were found, try searching again\" : null;\n  const [page, setPage] = useState(1);\n  const [searchParams] = useSearchParams();\n  const search = searchParams.get('search');\n  const genre = searchParams.get('genre');\n  const {\n    data: movies,\n    isLoading,\n    error\n  } = SearchFetch();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-search\",\n      children: /*#__PURE__*/_jsxDEV(SearchForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(MoviesList, \"RYJvKb8NFcaVjtDhJD6IM1VBAew=\", false, function () {\n  return [useSearchParams];\n});\n_c = MoviesList;\nexport default MoviesList;\n\n/* export const moviesListLoader = async ({ request }) => {\n  const reqUrl = new URL(request.url);\n  const searchTerm = reqUrl.searchParams.get(\"search\");\n  if (searchTerm) {\n    const response = await fetch(`\n    ${url}/search/movie?api_key=0557b758465b10519557edb25fc53d86&language=en-US&query=${searchTerm}`);\n    return response.json();\n  } else {\n    const response = await fetch(`\n    ${url}/search/movie?api_key=0557b758465b10519557edb25fc53d86&language=en-US&query=`);\n    return response.json();\n  }\n}; */\nvar _c;\n$RefreshReg$(_c, \"MoviesList\");","map":{"version":3,"names":["useEffect","useState","Link","useActionData","useLoaderData","useSearchParams","MoviePanel","SearchForm","SearchFetch","url","jsxDEV","_jsxDEV","Fragment","_Fragment","MoviesList","_s","page","setPage","searchParams","search","get","genre","data","movies","isLoading","error","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/muhannadalomari/Desktop/2023 Interns Batch/react-project/react-movie-app/src/pages/movies/MoviesList.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { Link, useActionData, useLoaderData, useSearchParams } from \"react-router-dom\";\nimport MoviePanel from \"../../components/MoviePanel\";\nimport SearchForm from \"../../components/SearchForm\";\nimport SearchFetch from \"../../Fetch/SearchFetch\";\nimport { url } from \"../../Global\";\n\nconst MoviesList = () => {\n  // const movies = useLoaderData().results;\n  // const error =\n  //   movies.length === 0 ? \"No Movies were found, try searching again\" : null;\n  const [page, setPage] = useState(1);\n  const [searchParams] = useSearchParams();\n  const search = searchParams.get('search');\n  const genre = searchParams.get('genre');\n  const { data: movies, isLoading, error } = SearchFetch()\n\n  return (\n    <>\n      <div className=\"filter-search\">\n        <SearchForm />\n      </div>\n      {/* <div className=\"movies-page\">\n        {error && <div className=\"movie-error\">{error}</div>}\n        {movies && (\n          <div className=\"movie-grid\">\n            {movies &&\n              movies.map((movie) => (\n                <MoviePanel movie={movie} key={movie.id} />\n              ))}\n          </div>\n        )}\n        {!error && (\n          <div className=\"pagenum-container\">\n            <div className=\"prev-btn\">\n              <button>Prev</button>\n            </div>\n            <div className=\"page-number\">\n              <Link to=\"/search\">1</Link>\n            </div>\n            <div className=\"next-btn\">\n              <button>Next</button>\n            </div>\n          </div>\n        )}\n      </div> */}\n    </>\n  );\n};\n\nexport default MoviesList;\n\n/* export const moviesListLoader = async ({ request }) => {\n  const reqUrl = new URL(request.url);\n  const searchTerm = reqUrl.searchParams.get(\"search\");\n  if (searchTerm) {\n    const response = await fetch(`\n    ${url}/search/movie?api_key=0557b758465b10519557edb25fc53d86&language=en-US&query=${searchTerm}`);\n    return response.json();\n  } else {\n    const response = await fetch(`\n    ${url}/search/movie?api_key=0557b758465b10519557edb25fc53d86&language=en-US&query=`);\n    return response.json();\n  }\n}; */\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,IAAI,EAAEC,aAAa,EAAEC,aAAa,EAAEC,eAAe,QAAQ,kBAAkB;AACtF,OAAOC,UAAU,MAAM,6BAA6B;AACpD,OAAOC,UAAU,MAAM,6BAA6B;AACpD,OAAOC,WAAW,MAAM,yBAAyB;AACjD,SAASC,GAAG,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEnC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB;EACA;EACA;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACiB,YAAY,CAAC,GAAGb,eAAe,EAAE;EACxC,MAAMc,MAAM,GAAGD,YAAY,CAACE,GAAG,CAAC,QAAQ,CAAC;EACzC,MAAMC,KAAK,GAAGH,YAAY,CAACE,GAAG,CAAC,OAAO,CAAC;EACvC,MAAM;IAAEE,IAAI,EAAEC,MAAM;IAAEC,SAAS;IAAEC;EAAM,CAAC,GAAGjB,WAAW,EAAE;EAExD,oBACEG,OAAA,CAAAE,SAAA;IAAAa,QAAA,eACEf,OAAA;MAAKgB,SAAS,EAAC,eAAe;MAAAD,QAAA,eAC5Bf,OAAA,CAACJ,UAAU;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAG;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACV,iBAyBL;AAEP,CAAC;AAAChB,EAAA,CAzCID,UAAU;EAAA,QAKST,eAAe;AAAA;AAAA2B,EAAA,GALlClB,UAAU;AA2ChB,eAAeA,UAAU;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}