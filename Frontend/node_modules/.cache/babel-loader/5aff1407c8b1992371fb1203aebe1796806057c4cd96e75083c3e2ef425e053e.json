{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nconst FetchGenres = url => {\n  _s();\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [genres, setgenres] = useState();\n  useEffect(() => {\n    const abort = new AbortController();\n    fetch(url, {\n      signal: abort.signal\n    }).then(res => {\n      if (!res.ok) {\n        throw Error('Data was not obtained');\n      }\n      return res.json();\n    }).then(data => {\n      setIsLoading(false);\n      setError(null);\n      setData(data);\n    }).catch(err => {\n      if (err.name === \"AbortError\") {\n        console.log(err);\n      } else {\n        setIsLoading(false);\n        setError(err.message);\n      }\n    });\n    return () => abort.abort;\n  }, [url]);\n  return {\n    data,\n    error,\n    isLoading\n  };\n};\n_s(FetchGenres, \"8g0c4p0d9bHcjcrlK7AdXazU3RQ=\");\n_c = FetchGenres;\nexport default FetchGenres;\nvar _c;\n$RefreshReg$(_c, \"FetchGenres\");","map":{"version":3,"names":["useEffect","useState","FetchGenres","url","_s","error","setError","isLoading","setIsLoading","genres","setgenres","abort","AbortController","fetch","signal","then","res","ok","Error","json","data","setData","catch","err","name","console","log","message","_c","$RefreshReg$"],"sources":["/Users/muhannadalomari/Desktop/2023 Interns Batch/react-project/react-movie-app/src/Fetch/FetchGenres.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nconst FetchGenres = (url) => {\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [genres, setgenres] = useState();\n\n  useEffect(() => {\n    const abort = new AbortController();\n    \n    fetch(url, { signal: abort.signal })\n    .then(res => {\n      if(!res.ok) {\n        throw Error('Data was not obtained');\n      } \n      return res.json();\n    })\n    .then(data => {\n      setIsLoading(false);\n      setError(null);\n      setData(data);\n    })\n    .catch(err => {\n      if(err.name === \"AbortError\") {\n        console.log(err);\n      } else {\n        setIsLoading(false);\n        setError(err.message);\n      }\n    })\n\n    return () => abort.abort;\n  }, [url]);\n\n  return { data, error, isLoading };\n};\n \nexport default FetchGenres;"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,MAAMC,WAAW,GAAIC,GAAG,IAAK;EAAAC,EAAA;EAC3B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,EAAE;EAEtCD,SAAS,CAAC,MAAM;IACd,MAAMW,KAAK,GAAG,IAAIC,eAAe,EAAE;IAEnCC,KAAK,CAACV,GAAG,EAAE;MAAEW,MAAM,EAAEH,KAAK,CAACG;IAAO,CAAC,CAAC,CACnCC,IAAI,CAACC,GAAG,IAAI;MACX,IAAG,CAACA,GAAG,CAACC,EAAE,EAAE;QACV,MAAMC,KAAK,CAAC,uBAAuB,CAAC;MACtC;MACA,OAAOF,GAAG,CAACG,IAAI,EAAE;IACnB,CAAC,CAAC,CACDJ,IAAI,CAACK,IAAI,IAAI;MACZZ,YAAY,CAAC,KAAK,CAAC;MACnBF,QAAQ,CAAC,IAAI,CAAC;MACde,OAAO,CAACD,IAAI,CAAC;IACf,CAAC,CAAC,CACDE,KAAK,CAACC,GAAG,IAAI;MACZ,IAAGA,GAAG,CAACC,IAAI,KAAK,YAAY,EAAE;QAC5BC,OAAO,CAACC,GAAG,CAACH,GAAG,CAAC;MAClB,CAAC,MAAM;QACLf,YAAY,CAAC,KAAK,CAAC;QACnBF,QAAQ,CAACiB,GAAG,CAACI,OAAO,CAAC;MACvB;IACF,CAAC,CAAC;IAEF,OAAO,MAAMhB,KAAK,CAACA,KAAK;EAC1B,CAAC,EAAE,CAACR,GAAG,CAAC,CAAC;EAET,OAAO;IAAEiB,IAAI;IAAEf,KAAK;IAAEE;EAAU,CAAC;AACnC,CAAC;AAACH,EAAA,CAjCIF,WAAW;AAAA0B,EAAA,GAAX1B,WAAW;AAmCjB,eAAeA,WAAW;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}