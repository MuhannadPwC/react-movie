{"ast":null,"code":"var _jsxFileName = \"/Users/muhannadalomari/Desktop/2023 Interns Batch/react-project/react-movie-app/src/pages/movies/MovieDetails.js\",\n  _s = $RefreshSig$();\nimport { buildStyles, CircularProgressbar } from \"react-circular-progressbar\";\nimport \"react-circular-progressbar/dist/styles.css\";\nimport { useLoaderData } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieDetails = () => {\n  _s();\n  const movie = useLoaderData();\n  const date = new Date(movie.release_date);\n  const genres = movie.genres.map(genre => {\n    return genre.name;\n  });\n  const percentage = Math.round(movie.vote_average * 10);\n  let color = \"#008631\";\n  if (percentage <= 25) {\n    color = \"#ff0000\";\n  }\n  if (percentage > 25 && percentage < 50) {\n    color = \"#FF7518\";\n  }\n  if (percentage >= 50 && percentage < 75) {\n    color = \"#FDDA0D\";\n  }\n  if (percentage >= 75 && percentage < 90) {\n    color = \"#00c04b\";\n  }\n  console.log(movie);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-details\",\n    style: {\n      backgroundImage: `linear-gradient(\n          to right,\n          rgba(var(--bg-color), 1) 0%,\n          rgba(var(--bg-color), 0.3) 100%\n        ),url('https://image.tmdb.org/t/p/original/${movie.backdrop_path}')`\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"details-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `https://image.tmdb.org/t/p/w300/${movie.poster_path}`,\n          alt: movie.title,\n          onError: e => {\n            e.currentTarget.src = \"/nullImage.jpeg\";\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-elements\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [movie.title, \" (\", date.getFullYear(), \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [date.getDay(), \"/\", date.getMonth(), \"/\", date.getFullYear(), \"-\", genres.join(\", \")]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              minWidth: \"40px\",\n              maxWidth: \"70px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(CircularProgressbar, {\n              value: percentage,\n              text: percentage.toString() + \"%\",\n              background: true,\n              styles: buildStyles({\n                // text size\n                textSize: \"30px\",\n                // colors\n                pathColor: color,\n                textColor: color,\n                backgroundColor: \"#000000\"\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"save-btns\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"glyphs save-white\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"glyphs heart-white\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), \"div\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(MovieDetails, \"Ln9Tkp21gkUZZLup7zxu9JE9bm8=\", false, function () {\n  return [useLoaderData];\n});\n_c = MovieDetails;\nexport default MovieDetails;\nexport const movieDetailsLoader = async _ref => {\n  let {\n    params\n  } = _ref;\n  const {\n    id\n  } = params;\n  const res = await fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=0557b758465b10519557edb25fc53d86&language=en-US`);\n  return res.json();\n};\nvar _c;\n$RefreshReg$(_c, \"MovieDetails\");","map":{"version":3,"names":["buildStyles","CircularProgressbar","useLoaderData","jsxDEV","_jsxDEV","MovieDetails","_s","movie","date","Date","release_date","genres","map","genre","name","percentage","Math","round","vote_average","color","console","log","className","style","backgroundImage","backdrop_path","children","src","poster_path","alt","title","onError","e","currentTarget","fileName","_jsxFileName","lineNumber","columnNumber","getFullYear","getDay","getMonth","join","minWidth","maxWidth","value","text","toString","background","styles","textSize","pathColor","textColor","backgroundColor","_c","movieDetailsLoader","_ref","params","id","res","fetch","json","$RefreshReg$"],"sources":["/Users/muhannadalomari/Desktop/2023 Interns Batch/react-project/react-movie-app/src/pages/movies/MovieDetails.js"],"sourcesContent":["import { buildStyles, CircularProgressbar } from \"react-circular-progressbar\";\nimport \"react-circular-progressbar/dist/styles.css\";\nimport { useLoaderData } from \"react-router-dom\";\n\nconst MovieDetails = () => {\n  const movie = useLoaderData();\n  const date = new Date(movie.release_date);\n  const genres = movie.genres.map((genre) => {\n    return genre.name;\n  });\n  const percentage = Math.round(movie.vote_average * 10);\n  let color = \"#008631\";\n  if (percentage <= 25) {\n    color = \"#ff0000\";\n  }\n  if (percentage > 25 && percentage < 50) {\n    color = \"#FF7518\";\n  }\n  if (percentage >= 50 && percentage < 75) {\n    color = \"#FDDA0D\";\n  }\n  if (percentage >= 75 && percentage < 90) {\n    color = \"#00c04b\";\n  }\n\n  console.log(movie);\n\n  return (\n    <div\n      className=\"movie-details\"\n      style={{\n        backgroundImage: `linear-gradient(\n          to right,\n          rgba(var(--bg-color), 1) 0%,\n          rgba(var(--bg-color), 0.3) 100%\n        ),url('https://image.tmdb.org/t/p/original/${movie.backdrop_path}')`,\n      }}\n    >\n      <div className=\"details-container\">\n        <div className=\"image\">\n          <img\n            src={`https://image.tmdb.org/t/p/w300/${movie.poster_path}`}\n            alt={movie.title}\n            onError={(e) => {\n              e.currentTarget.src = \"/nullImage.jpeg\";\n            }}\n          />\n        </div>\n        <div className=\"movie-elements\">\n          <div>\n            <h1>\n              {movie.title} ({date.getFullYear()})\n            </h1>\n            <p>\n              {date.getDay()}/{date.getMonth()}/{date.getFullYear()}-\n              {genres.join(\", \")}\n            </p>\n          </div>\n          <div className=\"flex\">\n            <div style={{ minWidth: \"40px\", maxWidth: \"70px\" }}>\n              <CircularProgressbar\n                value={percentage}\n                text={percentage.toString() + \"%\"}\n                background={true}\n                styles={buildStyles({\n                  // text size\n                  textSize: \"30px\",\n\n                  // colors\n                  pathColor: color,\n                  textColor: color,\n                  backgroundColor: \"#000000\",\n                })}\n              />\n            </div>\n            <div className=\"save-btns\">\n              <button>\n                <span className=\"glyphs save-white\"></span>\n              </button>\n              <button>\n                <span className=\"glyphs heart-white\"></span>\n              </button>\n            </div>\n          </div>\n          div\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n\nexport const movieDetailsLoader = async ({ params }) => {\n  const { id } = params;\n  const res = await fetch(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=0557b758465b10519557edb25fc53d86&language=en-US`\n  );\n\n  return res.json();\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}