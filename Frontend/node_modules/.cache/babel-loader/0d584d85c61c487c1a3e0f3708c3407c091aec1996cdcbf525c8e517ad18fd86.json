{"ast":null,"code":"var _jsxFileName = \"/Users/muhannadalomari/Desktop/2023 Interns Batch/react-project/react-movie-app/src/pages/movies/MoviesDetails.js\",\n  _s = $RefreshSig$();\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MoviesDetails = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-details\",\n    children: /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Movie details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n_s(MoviesDetails, \"yQgCIz/jJfqV1l9s2yoba81MT5A=\", false, function () {\n  return [useParams];\n});\n_c = MoviesDetails;\nexport default MoviesDetails;\nexport const MovieDetailsLoader = async _ref => {\n  let {\n    params\n  } = _ref;\n  const {\n    id\n  } = params;\n  const res = await fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=0557b758465b10519557edb25fc53d86&language=en-US`);\n  if (!res.ok) {\n    throw Error('Could not find movie');\n  }\n  return res.json();\n};\n_c2 = MovieDetailsLoader;\nvar _c, _c2;\n$RefreshReg$(_c, \"MoviesDetails\");\n$RefreshReg$(_c2, \"MovieDetailsLoader\");","map":{"version":3,"names":["useParams","jsxDEV","_jsxDEV","MoviesDetails","_s","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","MovieDetailsLoader","_ref","params","res","fetch","ok","Error","json","_c2","$RefreshReg$"],"sources":["/Users/muhannadalomari/Desktop/2023 Interns Batch/react-project/react-movie-app/src/pages/movies/MoviesDetails.js"],"sourcesContent":["import { useParams } from \"react-router-dom\";\n\nconst MoviesDetails = () => {\n  const { id } = useParams();\n\n  \n  return (\n    <div className=\"movie-details\">\n      <h3>Movie details</h3>\n    </div>\n  );\n}\n \nexport default MoviesDetails;\n\nexport const MovieDetailsLoader = async ({params}) => {\n  const { id } = params;\n\n  const res = await fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=0557b758465b10519557edb25fc53d86&language=en-US`);\n\n  if (!res.ok) {\n    throw Error('Could not find movie');\n  }\n  \n  return res.json();\n}"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM;IAAEC;EAAG,CAAC,GAAGL,SAAS,EAAE;EAG1B,oBACEE,OAAA;IAAKI,SAAS,EAAC,eAAe;IAAAC,QAAA,eAC5BL,OAAA;MAAAK,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAK;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAClB;AAEV,CAAC;AAAAP,EAAA,CATKD,aAAa;EAAA,QACFH,SAAS;AAAA;AAAAY,EAAA,GADpBT,aAAa;AAWnB,eAAeA,aAAa;AAE5B,OAAO,MAAMU,kBAAkB,GAAG,MAAAC,IAAA,IAAoB;EAAA,IAAb;IAACC;EAAM,CAAC,GAAAD,IAAA;EAC/C,MAAM;IAAET;EAAG,CAAC,GAAGU,MAAM;EAErB,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,sCAAqCZ,EAAG,0DAAyD,CAAC;EAE3H,IAAI,CAACW,GAAG,CAACE,EAAE,EAAE;IACX,MAAMC,KAAK,CAAC,sBAAsB,CAAC;EACrC;EAEA,OAAOH,GAAG,CAACI,IAAI,EAAE;AACnB,CAAC;AAAAC,GAAA,GAVYR,kBAAkB;AAAA,IAAAD,EAAA,EAAAS,GAAA;AAAAC,YAAA,CAAAV,EAAA;AAAAU,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}